# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

# mvn clean jacoco:prepare-agent install jacoco:report
name: Java CI with Maven

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Quality Check
        run: mvn -s $GITHUB_WORKSPACE/src/main/res/.m2/settings.xml -B versions:update-parent versions:update-properties compile --file pom.xml
        env:
          USER_NAME: ${{ secrets.GH_PACKAGE_USER }}
          ACCESS_TOKEN: ${{ secrets.GH_PACKAGE_TOKEN }}

      - name: Build
        run: mvn -s $GITHUB_WORKSPACE/src/main/res/.m2/settings.xml -B jacoco:prepare-agent install jacoco:report --file pom.xml
        env:
          USER_NAME: ${{ secrets.GH_PACKAGE_USER }}
          ACCESS_TOKEN: ${{ secrets.GH_PACKAGE_TOKEN }}

#      - name: Copy Artifacts
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.GURUKULAMS_HOST }}
#          username: ${{ secrets.GURUKULAMS_USER }}
#          key: ${{ secrets.GURUKULAMS_KEY }}
#          target: ${{ secrets.GURUKULAMS_ENGINE_DIR }}
#          source: "target/*.jar"
#          strip_components: 1
#
#      - name: Deploy
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.GURUKULAMS_HOST }}
#          username: ${{ secrets.GURUKULAMS_USER }}
#          key: ${{ secrets.GURUKULAMS_KEY }}
#          script: cd ${{ secrets.GURUKULAMS_ENGINE_DIR }} && sh deploy.sh